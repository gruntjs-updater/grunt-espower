var Util;
(function (Util) {
    function hello(target) {
        if (target === void 0) {
            target = 'world';
        }
        assert(assert._expr(assert._capt(assert._capt(target, 'arguments/0/left') != null, 'arguments/0'), {
            content: 'assert(target != null)',
            filepath: 'util1.ts',
            line: 3
        }));
        return 'Hello, ' + target + '!';
    }
    Util.hello = hello;
}(Util || (Util = {})));
var Util;
(function (Util) {
    function bye(target) {
        if (target === void 0) {
            target = 'world';
        }
        assert(assert._expr(assert._capt(assert._capt(target, 'arguments/0/left') != null, 'arguments/0'), {
            content: 'assert(target != null)',
            filepath: 'subdir/util2.ts',
            line: 3
        }));
        return 'Good bye, ' + target + '!';
    }
    Util.bye = bye;
}(Util || (Util = {})));
assert(assert._expr(assert._capt(assert._capt(assert._capt(Util, 'arguments/0/left/callee/object').hello('grunt-espower'), 'arguments/0/left') === 'Hello, grunt-espower!', 'arguments/0'), {
    content: 'assert(Util.hello("grunt-espower") === "Hello, grunt-espower!")',
    filepath: 'main.ts',
    line: 6
}));
assert(assert._expr(assert._capt(assert._capt(assert._capt(Util, 'arguments/0/left/callee/object').bye('grunt-espower'), 'arguments/0/left') === 'Good bye, grunt-espower!', 'arguments/0'), {
    content: 'assert(Util.bye("grunt-espower") === "Good bye, grunt-espower!")',
    filepath: 'main.ts',
    line: 7
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwxLnRzIiwic3ViZGlyL3V0aWwyLnRzIiwibWFpbi50cyJdLCJuYW1lcyI6WyJVdGlsIiwiVXRpbC5oZWxsbyIsIlV0aWwuYnllIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLElBQVA7QUFBQSxDQUFBLFVBQU8sSUFBUCxFQUFZO0FBQUEsSUFDUkEsU0FBQUEsS0FBQUEsQ0FBc0JBLE1BQXRCQSxFQUFzQ0E7QUFBQUEsUUFBaEJDLElBQUFBLE1BQUFBLEtBQUFBLEtBQUFBLENBQUFBLEVBQWdCQTtBQUFBQSxZQUFoQkEsTUFBQUEsR0FBQUEsT0FBQUEsQ0FBZ0JBO0FBQUFBLFNBQUFEO0FBQUFBLFFBQ2xDQyxNQUFBQSxDQUFPQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSx5QkFBVUEsSUFBVkE7QUFBQUEsWUFBQUEsT0FBQUE7QUFBQUEsWUFBQUEsUUFBQUE7QUFBQUEsWUFBQUEsSUFBQUE7QUFBQUEsVUFBUEEsRUFEa0NEO0FBQUFBLFFBRWxDQyxPQUFPQSxZQUFZQSxNQUFaQSxHQUFxQkEsR0FBNUJBLENBRmtDRDtBQUFBQSxLQUQ5QjtBQUFBLElBQ1FBLElBQUFBLENBQUFBLEtBQUFBLEdBQUtBLEtBQUxBLENBRFI7QUFBQSxDQUFaLENBQU8sSUFBQSxJQUFBLENBQUEsSUFBQSxHQUFJLEVBQUosQ0FBUCxHQUFBO0FDQUEsSUFBTyxJQUFQLENEQUE7QUNBQSxDQUFBLFVBQU8sSUFBUCxFQUFZO0FBQUEsSUFDUkEsU0FBQUEsR0FBQUEsQ0FBb0JBLE1BQXBCQSxFQUFvQ0E7QUFBQUEsUUFBaEJFLElBQUFBLE1BQUFBLEtBQUFBLEtBQUFBLENBQUFBLEVBQWdCQTtBQUFBQSxZQUFoQkEsTUFBQUEsR0FBQUEsT0FBQUEsQ0FBZ0JBO0FBQUFBLFNBQUFGO0FBQUFBLFFBQ2hDRSxNQUFBQSxDQUFPQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSxDQUFBQSxLQUFBQSxDQUFBQSxNQUFBQSx5QkFBVUEsSUFBVkE7QUFBQUEsWUFBQUEsT0FBQUE7QUFBQUEsWUFBQUEsUUFBQUE7QUFBQUEsWUFBQUEsSUFBQUE7QUFBQUEsVUFBUEEsRUFEZ0NGO0FBQUFBLFFBRWhDRSxPQUFPQSxlQUFlQSxNQUFmQSxHQUF3QkEsR0FBL0JBLENBRmdDRjtBQUFBQSxLQUQ1QjtBQUFBLElBQ1FBLElBQUFBLENBQUFBLEdBQUFBLEdBQUdBLEdBQUhBLENBRFI7QUFBQSxDQUFaLENBQU8sSUFBQSxJQUFBLENBQUEsSUFBQSxHQUFJLEVBQUosQ0FBUCxHREFBO0FFS0EsTUFBQSxDQUFPLE1BQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBLENBQUEsSUFBQSxvQ0FBSyxLQUFMLENBQVcsZUFBWCwyQkFBZ0MsdUJBQWhDO0FBQUEsSUFBQSxPQUFBO0FBQUEsSUFBQSxRQUFBO0FBQUEsSUFBQSxJQUFBO0FBQUEsRUFBUCxFRkxBO0FFTUEsTUFBQSxDQUFPLE1BQUEsQ0FBQSxLQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsQ0FBQSxNQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQSxLQUFBLENBQUEsSUFBQSxvQ0FBSyxHQUFMLENBQVMsZUFBVCwyQkFBOEIsMEJBQTlCO0FBQUEsSUFBQSxPQUFBO0FBQUEsSUFBQSxRQUFBO0FBQUEsSUFBQSxJQUFBO0FBQUEsRUFBUCIsImZpbGUiOiJjb25jYXQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vdGVzdC9maXh0dXJlcy9tdWx0aS10cyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZSBVdGlsIHtcbiAgICBleHBvcnQgZnVuY3Rpb24gaGVsbG8odGFyZ2V0ID0gXCJ3b3JsZFwiKSB7XG4gICAgICAgIGFzc2VydCh0YXJnZXQgIT0gbnVsbCk7XG4gICAgICAgIHJldHVybiBcIkhlbGxvLCBcIiArIHRhcmdldCArIFwiIVwiO1xuICAgIH1cbn1cbiIsIm1vZHVsZSBVdGlsIHtcbiAgICBleHBvcnQgZnVuY3Rpb24gYnllKHRhcmdldCA9IFwid29ybGRcIikge1xuICAgICAgICBhc3NlcnQodGFyZ2V0ICE9IG51bGwpO1xuICAgICAgICByZXR1cm4gXCJHb29kIGJ5ZSwgXCIgKyB0YXJnZXQgKyBcIiFcIjtcbiAgICB9XG59XG4iLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi91dGlsMS50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9zdWJkaXIvdXRpbDIudHNcIiAvPlxuXG5kZWNsYXJlIHZhciBhc3NlcnQ6IGFueTtcblxuYXNzZXJ0KFV0aWwuaGVsbG8oXCJncnVudC1lc3Bvd2VyXCIpID09PSBcIkhlbGxvLCBncnVudC1lc3Bvd2VyIVwiKTtcbmFzc2VydChVdGlsLmJ5ZShcImdydW50LWVzcG93ZXJcIikgPT09IFwiR29vZCBieWUsIGdydW50LWVzcG93ZXIhXCIpO1xuIl19
